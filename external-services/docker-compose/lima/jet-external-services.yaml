# Deploy kubernetes via k3s (which installs a bundled containerd).
#
# It can be accessed from the host by exporting the kubeconfig file;
# the ports are already forwarded automatically by lima:
#
# $ export KUBECONFIG=$PWD/kubeconfig.yaml
# $ limactl shell k3s sudo cat /etc/rancher/k3s/k3s.yaml >$KUBECONFIG
# $ kubectl get no
# NAME       STATUS   ROLES                  AGE   VERSION
# lima-k3s   Ready    control-plane,master   69s   v1.21.1+k3s1

images:
  # Hint: run `limactl prune` to invalidate the "current" cache
  - location: "https://cloud-images.ubuntu.com/hirsute/current/hirsute-server-cloudimg-amd64.img"
    arch: "x86_64"
  - location: "https://cloud-images.ubuntu.com/hirsute/current/hirsute-server-cloudimg-arm64.img"
    arch: "aarch64"

# Mounts are disabled in this example, but can be enabled optionally.
mounts: []

ssh:
  localPort: 60022

# containerd is managed by k3s, not by Lima, so the values are set to false here.
containerd:
  system: false
  user: false

provision:
- mode: system
  script: |
    #!/bin/sh
    # install k3s
    curl -sfL https://get.k3s.io | sh -s - --disable=traefik

    # install helm
    curl https://baltocdn.com/helm/signing.asc | apt-key add -
    apt-get install apt-transport-https make --yes
    echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
    apt-get update
    apt-get install helm

- mode: user
  script: |
    #!/bin/sh
    if ! test -f ~/.kubeconfig.yaml; then
      echo "\nexport TZ=Asia/Shanghai;" >> ~/.bashrc
      echo "\nexport KUBECONFIG=~/.kubeconfig.yaml;" >> ~/.bashrc
      echo "\nalias k=kubectl;" >> ~/.bashrc

      sudo cat /etc/rancher/k3s/k3s.yaml > ~/.kubeconfig.yaml

      git clone https://github.com/Byzanteam/jet-deployment.git ~/jet-deployment
    fi

  hint: |
    To start external services.

    ```shell
    cd ~/jet-deployment/external-services/chart
    touch values.local.yaml
    make install
    ```

probes:
- script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! timeout 30s bash -c "until test -f /etc/rancher/k3s/k3s.yaml; do sleep 3; done"; then
            echo >&2 "k3s is not running yet"
            exit 1
    fi
